//This file contains convert_float_to_half function which is modified from fp16_ieee_from_fp32_value function of FP16 library (https://github.com/Maratyszcza/FP16).

/* The MIT License (MIT)
 *
 * Copyright (c) 2017 Facebook Inc.
 * Copyright (c) 2017 Georgia Institute of Technology
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

static half convert_float_to_half(float f) {
  const float scale_to_inf = 0x1.0p+112f;
  const float scale_to_zero = 0x1.0p-110f;
  float base = (fabs(f) * scale_to_inf) * scale_to_zero;

  const uint w = *(const uint*)&f;
  const uint shl1_w = w + w;
  const uint sign = w & (uint)(0x80000000);
  uint bias = shl1_w & (uint)(0xFF000000);
  if (bias < (uint)(0x71000000)) {
    bias = (uint)(0x71000000);
  }

  uint bits = (bias >> 1) + (uint)(0x07800000);
  base = *(const float*)&bits + base;
  bits = *(const uint*)&base;
  const uint exp_bits = (bits >> 13) & (uint)(0x00007C00);
  const uint mantissa_bits = bits & (uint)(0x00000FFF);
  const uint nonsign = exp_bits + mantissa_bits;
  const ushort ret = ((sign >> 16) | (shl1_w > (uint)(0xFF000000) ? (ushort)(0x7E00) : nonsign));
  return *(const half*)&ret;
}
